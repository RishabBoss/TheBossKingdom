#!/bin/bash

sudo apt update -qq
sudo apt install -y -qq zip unzip wget curl

cd ..
mkdir -p server
cd server

if [ -z "${GITHUB_USER}" ] && [ -z "${GITHUB_OAUTH_TOKEN}" ] ; then
    echo -e "using anon api call"
else
    echo -e "user and oauth token set"
    alias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '
fi

# retrieve latest tag to be used as version match, because gomint doesn't use normal releases
LATEST_VERSION=$(curl -sL https://api.github.com/repos/gomint/gomint/tags | jq -r '.[-1].name')

DOWNLOAD_URL=https://github.com/gomint/gomint/releases/download/${LATEST_VERSION}/${LATEST_VERSION}.zip

if [ ! -z "${DOWNLOAD_URL}" ]; then 
    if curl --output /dev/null --silent --head --fail ${DOWNLOAD_URL}; then
        echo -e "download link is valid. setting download link to ${DOWNLOAD_URL}"
        VALIDATED_URL=${DOWNLOAD_URL}
    else        
        echo -e "download link is invalid, something went wrong. Closing out"
        exit 2
    fi
fi

curl -sSL -o ${VALIDATED_URL##*/} ${VALIDATED_URL}

FILETYPE=$(file -F ',' ${VALIDATED_URL##*/} | cut -d',' -f2 | cut -d' ' -f2)
if [ "$FILETYPE" == "gzip" ]; then
    tar xzvf ${VALIDATED_URL##*/}
elif [ "$FILETYPE" == "Zip" ]; then
    unzip ${VALIDATED_URL##*/} -d modules/
elif [ "$FILETYPE" == "XZ" ]; then
    tar xvf ${VALIDATED_URL##*/}
else
    echo -e "unknown filetype. Exiting"
    # exit 2 
fi

# Move files into correct folders and remove unnecessary stuff
rm ${VALIDATED_URL##*/}
mv modules/modules/* modules
rm -rf modules/modules
rm modules/start.*

# Fetch server config
if [ ! -f server.yml ]; then
    curl -sSL -o server.yml https://raw.githubusercontent.com/parkervcp/eggs/master/minecraft/bedrock/gomint/server.yml
fi
