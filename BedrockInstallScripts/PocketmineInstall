#!/bin/bash

sudo apt update -qq
sudo apt install -y -qq zip unzip wget curl

cd ..
mkdir -p server
cd server




# -- EDIT HERE | DO NOT EDIT ABOVE -- #
VERSION=latest # VERSION: https://api.github.com/repos/pmmp/PocketMine-MP/releases/latest
GITHUB_PACKAGE=pmmp/PocketMine-MP # LEAVE THIS PART ALONE
MATCH=PocketMine-MP.phar # LEAVE THIS PART ALONE
# -- EDIT HERE | DO NOT EDIT BELOW -- #




## get release info and download links
LATEST_JSON=$(curl --silent "https://api.github.com/repos/${GITHUB_PACKAGE}/releases/latest")
RELEASES=$(curl --silent "https://api.github.com/repos/${GITHUB_PACKAGE}/releases")

if [ -z "${VERSION}" ] || [ "${VERSION}" == "latest" ]; then
    DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i ${MATCH})
else
    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION "${VERSION}" '.[] | select(.tag_name==$VERSION) | .tag_name')
    if [ "${VERSION}" == "${VERSION_CHECK}" ]; then
        DOWNLOAD_LINK=$(echo ${RELEASES} | jq -r --arg VERSION "${VERSION}" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})
    else
        echo -e "defaulting to latest release"
        DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)
    fi
fi

## this is a simple script to validate a download url actaully exists

if [ ! -z "${DOWNLOAD_URL}"]; then 
    if curl --output /dev/null --silent --head --fail ${DOWNLOAD_URL}; then
        echo -e "link is valid. setting download link to ${DOWNLOAD_URL}"
        DOWNLOAD_LINK=${DOWNLOAD_URL}
    else        
        echo -e "link is invalid closing out"
        exit 2
    fi
fi

curl -sSL ${DOWNLOAD_LINK} > PocketMine-MP.phar

echo -e "\n downloading latest php7.4 build from pocketmine"
curl -sSL -o php.binary.tar.gz https://jenkins.pmmp.io/job/PHP-7.4-Linux-x86_64/lastSuccessfulBuild/artifact/PHP_Linux-x86_64.tar.gz

echo -e "\n getting default server.properties"
curl -sSL https://raw.githubusercontent.com/parkervcp/eggs/master/minecraft/bedrock/pocketmine_mp/server.properties > server.properties

echo -e "\n unpacking php7 binaries"
tar -xzvf php.binary.tar.gz

echo -e "\n removing php7 packages"
rm -rf /mnt/server/php.binary.tar.gz

echo -e "\n creating files and folders"
touch banned-ips.txt banned-players.txt ops.txt white-list.txt server.log
mkdir -p players worlds plugins resource_packs
